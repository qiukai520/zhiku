# Generated by Django 2.0 on 2018-05-16 08:20

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('department', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'department',
            },
        ),
        migrations.CreateModel(
            name='Performence',
            fields=[
                ('pid', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('personal_score', models.IntegerField()),
                ('personal_total', models.IntegerField()),
                ('team_score', models.IntegerField()),
                ('team_total', models.IntegerField()),
            ],
            options={
                'db_table': 'performence',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('department', models.IntegerField()),
            ],
            options={
                'db_table': 'staff',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('tid', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=512)),
                ('content', models.TextField()),
                ('type_id', models.SmallIntegerField()),
                ('issuer_id', models.IntegerField()),
                ('perfor_id', models.IntegerField()),
                ('execute_way', models.IntegerField()),
                ('teamwork_auth', models.IntegerField()),
                ('tcid', models.IntegerField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('deadline', models.DateTimeField(blank=True, null=True)),
                ('is_assign', models.IntegerField()),
                ('is_finish', models.IntegerField()),
                ('status', models.IntegerField()),
                ('create_time', models.DateTimeField()),
                ('last_edit', models.DateTimeField()),
            ],
            options={
                'db_table': 'task',
            },
        ),
        migrations.CreateModel(
            name='TaskAssign',
            fields=[
                ('tasid', models.AutoField(primary_key=True, serialize=False)),
                ('tid', models.IntegerField()),
                ('member_id', models.IntegerField()),
                ('content', models.TextField()),
                ('deadline', models.DateTimeField()),
                ('weight', models.SmallIntegerField()),
                ('create_time', models.DateTimeField()),
                ('last_edit', models.DateTimeField()),
            ],
            options={
                'db_table': 'task_assign',
            },
        ),
        migrations.CreateModel(
            name='TaskAssignAttachment',
            fields=[
                ('taaid', models.AutoField(primary_key=True, serialize=False)),
                ('tid', models.IntegerField()),
                ('sid', models.IntegerField()),
                ('attachment', models.CharField(blank=True, max_length=512, null=True)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'db_table': 'task_assign_attachment',
            },
        ),
        migrations.CreateModel(
            name='TaskAttachment',
            fields=[
                ('tamid', models.AutoField(primary_key=True, serialize=False)),
                ('tid', models.IntegerField()),
                ('attachment', models.CharField(blank=True, max_length=512, null=True)),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'db_table': 'task_attachment',
            },
        ),
        migrations.CreateModel(
            name='TaskAuth',
            fields=[
                ('taid', models.AutoField(primary_key=True, serialize=False)),
                ('tmid', models.IntegerField()),
                ('status', models.IntegerField()),
                ('result', models.IntegerField()),
                ('score', models.IntegerField()),
                ('create_time', models.DateTimeField()),
                ('last_edit', models.DateTimeField()),
            ],
            options={
                'db_table': 'task_auth',
            },
        ),
        migrations.CreateModel(
            name='TaskCycle',
            fields=[
                ('tcid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32, unique=True)),
            ],
            options={
                'db_table': 'task_cycle',
            },
        ),
        migrations.CreateModel(
            name='TaskRejectRecord',
            fields=[
                ('trid', models.AutoField(primary_key=True, serialize=False)),
                ('tmid', models.IntegerField()),
                ('create_time', models.DateTimeField()),
                ('reason', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'task_reject_record',
            },
        ),
        migrations.CreateModel(
            name='TaskReview',
            fields=[
                ('tvid', models.AutoField(primary_key=True, serialize=False)),
                ('tid', models.IntegerField()),
                ('sid', models.IntegerField()),
                ('follow', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'task_review',
            },
        ),
        migrations.CreateModel(
            name='TaskSubmitAttachment',
            fields=[
                ('tsaid', models.AutoField(primary_key=True, serialize=False)),
                ('tsid', models.IntegerField()),
                ('attachment', models.CharField(blank=True, max_length=512, null=True)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'db_table': 'task_submit_attachment',
            },
        ),
        migrations.CreateModel(
            name='TaskSubmitRecord',
            fields=[
                ('tsid', models.AutoField(primary_key=True, serialize=False)),
                ('tmid', models.IntegerField()),
                ('title', models.CharField(blank=True, max_length=512, null=True)),
                ('summary', models.CharField(blank=True, max_length=512, null=True)),
                ('experience', models.CharField(blank=True, max_length=512, null=True)),
                ('create_time', models.DateTimeField()),
                ('last_edit', models.DateTimeField()),
            ],
            options={
                'db_table': 'task_submit_record',
            },
        ),
        migrations.CreateModel(
            name='TaskTag',
            fields=[
                ('ttid', models.AutoField(primary_key=True, serialize=False)),
                ('tid', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'task_tag',
            },
        ),
        migrations.CreateModel(
            name='TaskType',
            fields=[
                ('tpid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'task_type',
            },
        ),
        migrations.AlterUniqueTogether(
            name='tasktag',
            unique_together={('tid', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='taskreview',
            unique_together={('tid', 'sid')},
        ),
    ]
